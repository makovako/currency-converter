{"version":3,"sources":["components/Header.js","components/Converter.js","utils/helpers.js","components/Result.js","components/Loading.js","App.js","index.js"],"names":["Header","BASE_URL","Converter","setResult","setLoading","loading","useState","srcCurrency","setSrcCurrency","destCurrency","setDestCurrency","amount","setAmount","error","setError","allCurrencies","setAllCurrencies","rates","setRates","useEffect","every","x","isNaN","currency","finAmount","toFixed","currencyToString","a","axios","get","res","data","base","Object","keys","setTimeout","fetchData","fetchCurrency","curr","filter","length","prev","slice","className","htmlFor","value","onChange","e","target","list","onClick","parseFloat","type","step","min","id","map","key","Result","result","Loading","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0124f29b.chunk.js","sourcesContent":["import React from 'react'\n\nexport const Header = () => {\n    return (\n        <header>\n            <h1>Currency Converter</h1>\n        </header>\n    )\n}\n\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { currencyToString } from \"../utils/helpers\";\n\nconst BASE_URL = \"https://api.exchangeratesapi.io/latest\";\n\nexport const Converter = ({ setResult, loading, setLoading }) => {\n  const [srcCurrency, setSrcCurrency] = useState(\"\");\n  const [destCurrency, setDestCurrency] = useState(\"\");\n  const [amount, setAmount] = useState(0);\n  const [error, setError] = useState([false, false]);\n  const [allCurrencies, setAllCurrencies] = useState([]);\n  const [rates, setRates] = useState(null);\n\n  useEffect(() => {\n    // if there is no error in input and we have rates, convert\n    if (error.every(x => !x) && !isNaN(amount) && amount >= 0 && rates) {\n      setResult(currencyToString(amount * rates[destCurrency], destCurrency));\n    } else {\n      setResult(0);\n    }\n  }, [error, amount, rates]);\n\n  /**\n   * Get all available currencies on component mount\n   */\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      const res = await axios.get(BASE_URL);\n      setAllCurrencies([res.data.base, ...Object.keys(res.data.rates)]);\n      setSrcCurrency(\"EUR\");\n      setDestCurrency(\"USD\");\n      setTimeout(() => setLoading(false), 500);\n    };\n    fetchData();\n  }, []);\n\n  /**\n   * On source currency change\n   * Update rates if currency is valid\n   * Update color if currency is correct\n   */\n  useEffect(() => {\n    const fetchCurrency = async curr => {\n      setLoading(true);\n      const res = await axios.get(`${BASE_URL}?base=${curr}`);\n      setTimeout(() => setLoading(false), 500);\n      setRates(res.data.rates);\n    };\n\n    const curr = allCurrencies.filter(curr => curr === srcCurrency);\n    if (curr.length === 1) {\n      // SRC CURRENCY is OK\n      setError(prev => [false, ...prev.slice(1, 2)]);\n      // Fetch new rates for currency\n      fetchCurrency(curr);\n    } else {\n      setError(prev => [true, ...prev.slice(1, 2)]);\n    }\n  }, [srcCurrency]);\n\n  /**\n   * On destination currency change\n   * Update color if currency is correct\n   */\n  useEffect(() => {\n    const curr = allCurrencies.filter(curr => curr === destCurrency);\n    if (curr.length === 1) {\n      // DEST CURRENCY is OK\n      setError(prev => [...prev.slice(0, 1), false]);\n    } else {\n      setError(prev => [...prev.slice(0, 1), true]);\n    }\n  }, [destCurrency]);\n\n  return (\n    <form>\n      <div className=\"form-control\">\n        <label htmlFor=\"source-currency\">Source currency</label>\n        <input\n          value={srcCurrency}\n          onChange={e => setSrcCurrency(e.target.value)}\n          list=\"currencies\"\n          className={error[0] ? \"red\" : \"green\"}\n        />\n      </div>\n      <div className=\"form-control\">\n        <label htmlFor=\"amount\">Amount</label>\n        <div className=\"amount-group\">\n          <div className=\"arrow\" onClick={() => setAmount(parseFloat(amount) + 1.0)}>+</div>\n          <input\n            type=\"number\"\n            step=\"any\"\n            value={amount}\n            onChange={e => setAmount(e.target.value)}\n            min=\"0\"\n          />\n          <div className=\"arrow\" onClick={() => setAmount(parseFloat(amount) - 1.0)}>-</div>\n        </div>\n      </div>\n      <div className=\"form-control\">\n        <label htmlFor=\"dest-currency\">Destination currency</label>\n        <input\n          value={destCurrency}\n          onChange={e => setDestCurrency(e.target.value)}\n          list=\"currencies\"\n          className={error[1] ? \"red\" : \"green\"}\n        />\n      </div>\n      {allCurrencies.length > 0 && (\n        <datalist id=\"currencies\">\n          {allCurrencies.map(curr => (\n            <option key={curr} value={curr} />\n          ))}\n        </datalist>\n      )}\n    </form>\n  );\n};\n","export const currencyToString = (amount, currency) => {\n    const finAmount = amount.toFixed(2)\n    switch (currency) {\n        case \"EUR\":\n            return `${finAmount} €`\n        case \"USD\":\n            return `$${finAmount}`\n        case \"GBP\":\n            return `£${finAmount}`\n        case \"CZK\":\n            if (amount === 1) {\n                return `${finAmount} koruna`\n            } else if (amount === 2 || amount === 3 || amount === 4) {\n                return `${finAmount} koruny`\n            } else {\n                return `${finAmount} korun`\n            }\n        default:\n            return `${finAmount} ${currency}`\n    }\n}","import React from 'react'\n\nexport const Result = ({result}) => {\n    return (\n        <div className=\"result\">\n            <p className=\"Result\">Result: {result}</p>\n        </div>\n    )\n}\n","import React from \"react\";\n\nexport const Loading = () => {\n  return (\n    <div className=\"loading\">\n      <p>Loading data ...</p>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\n\nimport { Header } from \"./components/Header\";\nimport { Converter } from \"./components/Converter\";\nimport { Result } from \"./components/Result\";\nimport { Loading } from \"./components/Loading\";\n\nfunction App() {\n  const [result, setResult] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Converter\n        setResult={setResult}\n        loading={loading}\n        setLoading={setLoading}\n      />\n      <Result result={result} />\n      {loading && <Loading />}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}